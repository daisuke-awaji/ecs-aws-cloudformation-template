
---
AWSTemplateFormatVersion: "2010-09-09"
Description: service

Parameters:
  Env:
    Description: An Env name that will be prefixed to resource names
    Type: String
    AllowedValues:
      - dev
      - prod

Resources:

  TargetGroup:
    Type: "AWS::ElasticLoadBalancingV2::TargetGroup"
    Properties:
      VpcId:
        Fn::ImportValue: !Sub ${Env}-vpc-VPC
      Name: !Sub ${Env}-target-group
      Protocol: HTTP
      Port: 80
      TargetType: ip

  InternetALB:
    Type: "AWS::ElasticLoadBalancingV2::LoadBalancer"
    Properties:
      Name: !Sub ${Env}-alb
      Tags:
        - Key: Name
          Value: !Sub ${Env}-alb
      Scheme: "internet-facing"
      LoadBalancerAttributes:
        - Key: "deletion_protection.enabled"
          Value: 'false'
        - Key: "idle_timeout.timeout_seconds"
          Value: '60'
        # - Key: "access_logs.s3.enabled"
        #   Value: true
        # - Key: "access_logs.s3.bucket"
        #   Value: !Sub "alb-log-${AWS::AccountId}"
      SecurityGroups:
        - !Ref ALBSecurityGroupId
      Subnets:
        - Fn::ImportValue: !Sub ${Env}-vpc-PublicSubnet1
        - Fn::ImportValue: !Sub ${Env}-vpc-PublicSubnet2

  ALBSecurityGroupId:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: !Sub ${Env}-alb-security-group
      VpcId:
        Fn::ImportValue: !Sub ${Env}-vpc-VPC
      SecurityGroupIngress:
        - IpProtocol: "TCP"
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
          Description: "all"
      Tags:
        - Key: Name
          Value: !Sub ${Env}-alb-security-group

  ALBListener:
    Type: "AWS::ElasticLoadBalancingV2::Listener"
    Properties:
      DefaultActions:
        - TargetGroupArn: !Ref TargetGroup
          Type: forward
      LoadBalancerArn: !Ref InternetALB
      Port: 80
      Protocol: HTTP

  ECSSecurityGroupId:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupDescription: !Sub ${Env}-ecs-security-group
      VpcId:
        Fn::ImportValue: !Sub ${Env}-vpc-VPC
      SecurityGroupIngress:
        - IpProtocol: "TCP"
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
          Description: "all"
      Tags:
        - Key: Name
          Value: !Sub ${Env}-ecs-security-group

  ECSService:
    Type: AWS::ECS::Service
    DependsOn: ALBListener
    Properties:
      Cluster:
        Fn::ImportValue: !Sub ${Env}-cluster-Cluster
      DesiredCount: 2
      LaunchType: FARGATE
      LoadBalancers:
        - TargetGroupArn: !Ref TargetGroup
          ContainerPort: 80
          ContainerName: !Sub ${Env}-app
      NetworkConfiguration:
       AwsvpcConfiguration:
           AssignPublicIp: ENABLED
           SecurityGroups:
             - !Ref ECSSecurityGroupId
           Subnets:
             - Fn::ImportValue: !Sub ${Env}-vpc-PrivateSubnet1
             - Fn::ImportValue: !Sub ${Env}-vpc-PrivateSubnet2
      ServiceName: !Sub ${Env}-service
      TaskDefinition:
        Fn::ImportValue: !Sub ${Env}-task-ECSTaskDefinition
